*******************************************************************DSA-1**************************************************************************
#include <iostream>
//#include <stdio.h>
using namespace std;
int main()
{   
     /* int A[10]={5,8,7,6,};
    cout<<sizeof(A)<<endl;
    cout<<A[3]<<endl;
    printf("%d\n",A[9]); */
    
        int n;
        cout << "Enter size: ";
        cin >> n;

        // Use dynamic memory allocation (new) or a fixed-size array
        int* A = new int[n]; // Or use a fixed-size array if n is known at compile time

        // Read input values into the array
        for (int i = 0; i < n; ++i) {
            cin >> A[i];
        }

        // Print array elements
        cout << "Array elements: ";
        for (int i = 0; i < n; ++i) {
            cout << A[i] << " ";
        }
        cout << endl;

        // Clean up dynamic memory (if using new)
        delete[] A; 
    return 0;

******************************************************************JAVA***************************************************************************************
//1. Command Line Argument:
import java.lang.*;

class cmdArgument
{
	public static void main(String arg[])
	{
		System.out.println("Hello");
		System.out.println(arg[0]);
		System.out.println(arg[1]);
	}
}

//2. Unicode Printing:
import java.lang.*;

class unicode
{
	public static void main(String arg[])
	{
		for(char i=0x0980;i<=0x09FF;i++)
			System.out.print(i+" ");
	}
}

//3. Different number system as input and output:

import java.lang.*;

class ToBinary
{
	public static void main(String arg[])
	{
		int a=125;	//Decimal input
		byte b=125;
		short c=12;
		System.out.println(Integer.toBinaryString(a));	//Binary Output
		System.out.println(Integer.toOctalString(a));	//Octal output
		System.out.println(Integer.toHexString(a));	//Hex output

		System.out.println(Integer.toBinaryString(b));
		System.out.println(Integer.toBinaryString(c));

		int x=0b1010;	//Binary input
		int y=012;	//Octal input
		int z=0xA;	//Hex input
		System.out.println(x);	//Decimal output
		System.out.println(y);
		System.out.println(z);


	}
}	
